CREATE TABLE IF NOT EXISTS users
(
    id  INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    varchar(319) NOT NULL,
    login    varchar(50)  NOT NULL,
    name     varchar(50)  NOT NULL,
    birthday Date         NOT NULL
);

CREATE TABLE IF NOT EXISTS mpa
(
    id   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(5) NOT NULL
);

CREATE TABLE IF NOT EXISTS films
(
    id           INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         varchar(100) NOT NULL,
    description  varchar(200) NOT NULL,
    release_date Date         NOT NULL CHECK (release_date > '1895-12-28'),
    duration     INT          NOT NULL CHECK (duration > 0),
    mpa_id       INT          NOT NULL,

    FOREIGN KEY (mpa_id) REFERENCES mpa (id) ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS genres
(
    id   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(15) NOT NULL
);

CREATE TABLE IF NOT EXISTS film_genre
(
    film_id  INT NOT NULL,
    genre_id INT NOT NULL,

    FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE,
    FOREIGN KEY (genre_id) REFERENCES genres (id) ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS friends
(
    user_id   INT NOT NULL,
    friend_id INT NOT NULL,
    status    BOOLEAN DEFAULT (0),

    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    FOREIGN KEY (friend_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS likes
(
    user_id  INT NOT NULL,
    film_id  INT NOT NULL,

    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE
);